#include <iostream>
#include <vector>

using namespace std;

void merge(vector<int>& a, int l, int m, int r) {
    int i = 0, j = 0;
    vector<int> t(r - l);

    while (l + i < m && m + j < r) {
        if (a[l + i] < a[m + j]) {
            t[i + j] = a[l + i];
            i++;
        } else {
            t[i + j] = a[m + j];
            j++;
        }
    }

    while (l + i < m) {
        t[i + j] = a[l + i];
        i++;
    }

    while (m + j < r) {
        t[i + j] = a[m + j];
        j++;
    }

    for (int k = 0; k < i + j; k++)
        a[l + k] = t[k];
}

void merge_sort(vector<int>& a, int l, int r) {
    if (r - l <= 1) return;
    int m = (r + l) / 2;
    merge_sort(a, l, m);
    merge_sort(a, m, r);
    merge(a, l, m, r);
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    freopen("sort.in", "r", stdin);
    freopen("sort.out", "w", stdout);
    int n;
    cin >> n;

    vector<int> a(n);
    for (int& i : a) cin >> i;

    merge_sort(a, 0, n);

    for (int& i : a) cout << i << " ";

    return 0;
}
